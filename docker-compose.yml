# Docker Compose configuration for GTD Tool

version: '3.8'

services:
  # Main application
  gtd-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    volumes:
      - ./logs:/var/log/nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gtd-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gtd-app.rule=Host(`localhost`)"
      - "traefik.http.services.gtd-app.loadbalancer.server.port=8080"

  # Development server (for local development)
  gtd-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_HMR_PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    profiles:
      - dev
    networks:
      - gtd-network

  # Nginx reverse proxy (optional)
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - gtd-app
    profiles:
      - proxy
    networks:
      - gtd-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring
    networks:
      - gtd-network

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    profiles:
      - monitoring
    networks:
      - gtd-network

networks:
  gtd-network:
    driver: bridge

volumes:
  grafana-storage: